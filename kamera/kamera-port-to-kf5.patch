diff -Nur kamera-15.04.3/CMakeLists.txt kamera-15.04.3-kf5/CMakeLists.txt
--- kamera-15.04.3/CMakeLists.txt	2015-01-21 03:53:30.000000000 +0000
+++ kamera-15.04.3-kf5/CMakeLists.txt	2015-07-23 11:54:42.639471937 +0000
@@ -1,20 +1,53 @@
 project(kamera)
 
-find_package(KDE4 REQUIRED)
-include(CMakePushCheckState)
-include(CheckSymbolExists)
-include(KDE4Defaults)
-include(MacroLibrary)
-include(MacroOptionalAddSubdirectory)
+
+cmake_minimum_required(VERSION 2.8.12 FATAL_ERROR)
+
+include(FeatureSummary)
+
+set(QT_MIN_VERSION "5.4.0")
+set(KF5_MIN_VERSION "5.3.0")
+find_package(Qt5 ${QT_MIN_VERSION} CONFIG REQUIRED COMPONENTS DBus Network Widgets Svg)
+
+find_package(ECM 0.0.11 REQUIRED NO_MODULE)
+set(CMAKE_MODULE_PATH ${ECM_MODULE_PATH} ${ECM_KDE_MODULE_DIR} "${CMAKE_CURRENT_SOURCE_DIR}/cmake")
+
+find_package(KF5 ${KF5_MIN_VERSION} REQUIRED COMPONENTS
+    Archive
+    Config
+    ConfigWidgets
+    CoreAddons
+    DBusAddons
+    DocTools
+    DNSSD
+    IconThemes
+    I18n
+    KIO
+    KHtml
+    KDELibs4Support
+    Pty
+    Solid
+    Bookmarks
+    GuiAddons
+    KIO
+)
+
+include(KDEInstallDirs)
+include(KDECMakeSettings)
+include(KDECompilerSettings)
+include(ECMMarkNonGuiExecutable)
+include(ECMMarkAsTest)
+include(ECMPackageConfigHelpers)
+include(ECMOptionalAddSubdirectory)
+
+find_package(KF5I18n CONFIG REQUIRED)
+ki18n_install(po)
 
 find_package(Gphoto2)
-macro_log_feature(GPHOTO2_FOUND "gphoto2" "Required to build kamera" "http://heanet.dl.sourceforge.net/sourceforge/gphoto" TRUE "" "")
 
-cmake_push_check_state()
 set(CMAKE_REQUIRED_INCLUDES "${GPHOTO2_INCLUDE_DIR}")
 set(CMAKE_REQUIRED_LIBRARIES "${GPHOTO2_LIBRARIES}")
 check_symbol_exists(gp_port_info_get_name "gphoto2.h" HAVE_GPHOTO2_5)
-cmake_pop_check_state()
 
 if(HAVE_GPHOTO2_5)
     message(STATUS "Detected libgphoto2 2.5.0 or newer")
@@ -26,9 +59,7 @@
 
 configure_file(config-kamera.h.cmake ${CMAKE_CURRENT_BINARY_DIR}/config-kamera.h)
 
-add_definitions (${QT_DEFINITIONS} ${KDE4_DEFINITIONS})
-add_definitions (-DQT_USE_FAST_CONCATENATION -DQT_USE_FAST_OPERATOR_PLUS)
-include_directories (${CMAKE_CURRENT_BINARY_DIR} ${KDE4_INCLUDES} ${GPHOTO2_INCLUDE_DIRS})
+include_directories (${CMAKE_CURRENT_BINARY_DIR} ${GPHOTO2_INCLUDE_DIRS})
 
 add_subdirectory( kcontrol ) 
 add_subdirectory( kioslave ) 
@@ -38,4 +69,3 @@
   solid_camera.desktop
   DESTINATION ${DATA_INSTALL_DIR}/solid/actions)
 
-macro_display_feature_log()
diff -Nur kamera-15.04.3/doc/CMakeLists.txt kamera-15.04.3-kf5/doc/CMakeLists.txt
--- kamera-15.04.3/doc/CMakeLists.txt	2015-01-21 03:53:30.000000000 +0000
+++ kamera-15.04.3-kf5/doc/CMakeLists.txt	2015-07-23 11:59:32.092466753 +0000
@@ -1 +1 @@
-kde4_create_handbook(index.docbook INSTALL_DESTINATION ${HTML_INSTALL_DIR}/en SUBDIR kcontrol/kamera)
+kdoctools_create_handbook(index.docbook INSTALL_DESTINATION ${HTML_INSTALL_DIR}/en SUBDIR kcontrol/kamera)
diff -Nur kamera-15.04.3/kcontrol/CMakeLists.txt kamera-15.04.3-kf5/kcontrol/CMakeLists.txt
--- kamera-15.04.3/kcontrol/CMakeLists.txt	2015-01-21 03:53:30.000000000 +0000
+++ kamera-15.04.3-kf5/kcontrol/CMakeLists.txt	2015-07-23 12:07:57.299457706 +0000
@@ -4,12 +4,16 @@
 set(kcm_kamera_PART_SRCS kamera.cpp kameradevice.cpp kameraconfigdialog.cpp )
 
 
-kde4_add_plugin(kcm_kamera ${kcm_kamera_PART_SRCS})
+add_library(kcm_kamera MODULE ${kcm_kamera_PART_SRCS})
+target_link_libraries(kcm_kamera
+                      KF5::I18n
+                      KF5::ConfigWidgets
+                      KF5::Service
+                      KF5::KDELibs4Support
+                      ${GPHOTO2_LIBRARIES})
+install(TARGETS kcm_kamera DESTINATION ${CMAKE_INSTALL_PLUGINDIR})
 
-
-target_link_libraries(kcm_kamera ${KDE4_KDEUI_LIBS} ${QT_QT3SUPPORT_LIBRARY} ${GPHOTO2_LIBRARIES})
-
-install(TARGETS kcm_kamera  DESTINATION ${PLUGIN_INSTALL_DIR} )
+qt5_use_modules(kcm_kamera Widgets)
 
 
 ########### install files ###############
diff -Nur kamera-15.04.3/kcontrol/kameraconfigdialog.cpp kamera-15.04.3-kf5/kcontrol/kameraconfigdialog.cpp
--- kamera-15.04.3/kcontrol/kameraconfigdialog.cpp	2015-01-21 03:53:30.000000000 +0000
+++ kamera-15.04.3-kf5/kcontrol/kameraconfigdialog.cpp	2015-07-23 12:13:30.908451732 +0000
@@ -22,13 +22,13 @@
 */
 #include <qlayout.h>
 #include <qlabel.h>
-#include <Q3GroupBox>
+#include <QGroupBox>
 #include <qcheckbox.h>
 #include <qradiobutton.h>
 #include <qlineedit.h>
 #include <qcombobox.h>
 #include <qslider.h>
-#include <Q3ButtonGroup>
+//#include <Q3ButtonGroup>
 
 #include <kvbox.h>
 #include <qtabwidget.h>
@@ -135,7 +135,7 @@
 			gp_widget_get_range(widget, &widget_low, &widget_high, &widget_increment);
 			gp_widget_get_value(widget, &widget_value_float);
 
-			Q3GroupBox *groupBox = new Q3GroupBox(1, Qt::Horizontal,QString::fromLocal8Bit(widget_label), parent);
+			QGroupBox *groupBox = new QGroupBox(QString::fromLocal8Bit(widget_label), parent);
 			parent->layout()->addWidget(groupBox);
 			QSlider *slider = new QSlider(Qt::Horizontal, groupBox);
 			slider->setMinimum((int)widget_low);
@@ -168,7 +168,8 @@
 			gp_widget_get_value(widget, &widget_value_string);
 
 			int count = gp_widget_count_choices(widget);
-
+//by cjacker
+#if 0
 			// for less than 5 options, align them horizontally
 			Q3ButtonGroup *buttonGroup;
 			if (count > 4)
@@ -189,7 +190,7 @@
 
 			if (!whats_this.isEmpty())
 				buttonGroup->setWhatsThis( whats_this);
-
+#endif
 			break;
 		}
 	case GP_WIDGET_MENU:
@@ -293,9 +294,10 @@
 		}
 	case GP_WIDGET_RADIO:
 		{
-			Q3ButtonGroup *buttonGroup = static_cast<Q3VButtonGroup *>(m_wmap[widget]);
+    //by cjacker.
+			/*Q3ButtonGroup *buttonGroup = static_cast<Q3VButtonGroup *>(m_wmap[widget]);
 			gp_widget_set_value(widget, (void *)buttonGroup->selected()->text().toLocal8Bit().data());
-
+            */
 			break;
 		}
 	case GP_WIDGET_MENU:
diff -Nur kamera-15.04.3/kcontrol/kamera.cpp kamera-15.04.3-kf5/kcontrol/kamera.cpp
--- kamera-15.04.3/kcontrol/kamera.cpp	2015-01-21 03:53:30.000000000 +0000
+++ kamera-15.04.3-kf5/kcontrol/kamera.cpp	2015-07-23 12:07:34.163458120 +0000
@@ -29,7 +29,7 @@
 #include <QApplication>
 #include <QStandardItemModel>
 
-#include <KGenericFactory>
+#include <KPluginFactory>
 #include <KConfig>
 #include <KAction>
 #include <KIcon>
@@ -50,8 +50,8 @@
 
 // --------------- Camera control center module widget ---
 
-KKameraConfig::KKameraConfig(QWidget *parent, const QVariantList &)
-	: KCModule(KKameraConfigFactory::componentData(), parent/*, name*/)
+KKameraConfig::KKameraConfig(QWidget *parent, const QVariantList & args)
+	: KCModule(parent, args)
 {
 	m_devicePopup = new KMenu(this);
 	m_actions = new KActionCollection(this);
diff -Nur kamera-15.04.3/kcontrol/kameradevice.cpp kamera-15.04.3-kf5/kcontrol/kameradevice.cpp
--- kamera-15.04.3/kcontrol/kameradevice.cpp	2015-01-21 03:53:30.000000000 +0000
+++ kamera-15.04.3-kf5/kcontrol/kameradevice.cpp	2015-07-23 12:09:22.508456180 +0000
@@ -43,7 +43,7 @@
 
 #include "kamera.h"
 #include "kameraconfigdialog.h"
-#include "kameradevice.moc"
+#include "kameradevice.h"
 
 // Define some parts of the old API
 #define GP_PROMPT_OK 0
diff -Nur kamera-15.04.3/kioslave/camera.protocol kamera-15.04.3-kf5/kioslave/camera.protocol
--- kamera-15.04.3/kioslave/camera.protocol	2015-01-21 03:53:30.000000000 +0000
+++ kamera-15.04.3-kf5/kioslave/camera.protocol	2015-07-23 11:54:58.533471652 +0000
@@ -1,5 +1,5 @@
 [Protocol]
-exec=kio_kamera
+exec=kf5/kio/kamera
 protocol=camera
 input=none
 output=filesystem
diff -Nur kamera-15.04.3/kioslave/CMakeLists.txt kamera-15.04.3-kf5/kioslave/CMakeLists.txt
--- kamera-15.04.3/kioslave/CMakeLists.txt	2015-01-21 03:53:30.000000000 +0000
+++ kamera-15.04.3-kf5/kioslave/CMakeLists.txt	2015-07-23 11:57:23.851469050 +0000
@@ -1,17 +1,15 @@
 
 ########### next target ###############
+add_definitions(-DTRANSLATION_DOMAIN=\"kio_kamera\")
 
 set(kio_kamera_PART_SRCS kamera.cpp )
 
 
-kde4_add_plugin(kio_kamera ${kio_kamera_PART_SRCS})
-
-
-target_link_libraries(kio_kamera  ${KDE4_KIO_LIBS} ${GPHOTO2_LIBRARIES}  )
-
-install(TARGETS kio_kamera  DESTINATION ${PLUGIN_INSTALL_DIR} )
+add_library(kio_kamera MODULE ${kio_kamera_PART_SRCS} )
+target_link_libraries(kio_kamera ${GPHOTO2_LIBRARIES} Qt5::Core KF5::KIOCore KF5::I18n KF5::Solid KF5::KDELibs4Support)
+set_target_properties(kio_kamera PROPERTIES OUTPUT_NAME "kamera")
 
+install(TARGETS kio_kamera DESTINATION ${PLUGIN_INSTALL_DIR}/kf5/kio)
 
 ########### install files ###############
-
 install( FILES camera.protocol  DESTINATION  ${SERVICES_INSTALL_DIR} )
diff -Nur kamera-15.04.3/kioslave/kamera.cpp kamera-15.04.3-kf5/kioslave/kamera.cpp
--- kamera-15.04.3/kioslave/kamera.cpp	2015-01-21 03:53:30.000000000 +0000
+++ kamera-15.04.3-kf5/kioslave/kamera.cpp	2015-07-23 11:54:51.283471782 +0000
@@ -35,9 +35,10 @@
 #include <qfile.h>
 #include <qtextstream.h>
 
-#include <kdebug.h>
-#include <kcomponentdata.h>
-#include <kstandarddirs.h>
+#include <qdebug.h>
+
+#include <KStandardDirs>
+//#include <kstandarddirs.h>
 #include <kconfig.h>
 #include <kconfiggroup.h>
 #include <klocale.h>
@@ -54,11 +55,13 @@
 
 #define MAXIDLETIME   30      /* seconds */
 
+Q_LOGGING_CATEGORY(LOG_KIO_KAMERA, "kde.kio-kamera")
+
 using namespace KIO;
 
 extern "C"
 {
-	KDE_EXPORT int kdemain(int argc, char **argv);
+	Q_DECL_EXPORT int kdemain(int argc, char **argv);
 
 #ifdef HAVE_GPHOTO2_5
 	static void frontendCameraStatus(GPContext *context, const char *status, void *data);
@@ -80,10 +83,10 @@
 
 int kdemain(int argc, char **argv)
 {
-	KComponentData componentData("kio_kamera");
+	//KComponentData componentData("kio_kamera");
 
 	if(argc != 4) {
-		kDebug(7123) << "Usage: kio_kamera protocol "
+		qCDebug(LOG_KIO_KAMERA) << "Usage: kio_kamera protocol "
 			     "domain-socket1 domain-socket2" << endl;
 		exit(-1);
 	}
@@ -124,12 +127,12 @@
 // The existence of a lockfile is used to signify "please give up camera".
 //
 void KameraProtocol::special(const QByteArray&) {
-	kDebug(7123) << "KameraProtocol::special() at " << getpid();
+	qCDebug(LOG_KIO_KAMERA) << "KameraProtocol::special() at " << getpid();
 
 	if (!actiondone && cameraopen) {
 		struct stat	stbuf;
 		if ((-1!=::stat(m_lockfile.toUtf8(),&stbuf)) || (idletime++ >= MAXIDLETIME)) {
-			kDebug(7123) << "KameraProtocol::special() closing camera.";
+			qCDebug(LOG_KIO_KAMERA) << "KameraProtocol::special() closing camera.";
 			closeCamera();
 			setTimeoutSpecialCommand(-1);
 		} else {
@@ -145,7 +148,7 @@
 
 KameraProtocol::~KameraProtocol()
 {
-	kDebug(7123) << "KameraProtocol::~KameraProtocol()";
+	qCDebug(LOG_KIO_KAMERA) << "KameraProtocol::~KameraProtocol()";
 	delete m_config;
 	if(m_camera) {
 		closeCamera();
@@ -163,7 +166,7 @@
 	} else {
 		if (!cameraopen) {
 			int ret, tries = 15;
-			kDebug(7123) << "KameraProtocol::openCamera at " << getpid();
+			qCDebug(LOG_KIO_KAMERA) << "KameraProtocol::openCamera at " << getpid();
 			while (tries--) {
 				ret = gp_camera_init(m_camera, m_context);
 				if (	(ret == GP_ERROR_IO_USB_CLAIM) ||
@@ -172,7 +175,7 @@
 					int fd = ::open(m_lockfile.toUtf8(),O_CREAT|O_WRONLY,0600);
 					if (fd != -1) ::close(fd);
 					::sleep(1);
-					kDebug(7123) << "openCamera at " << getpid() << "- busy, ret " << ret << ", trying again.";
+					qCDebug(LOG_KIO_KAMERA) << "openCamera at " << getpid() << "- busy, ret " << ret << ", trying again.";
 					continue;
 				}
 				if (ret == GP_OK) break;
@@ -181,7 +184,7 @@
 			}
 			::unlink(m_lockfile.toUtf8());
 			setTimeoutSpecialCommand(1);
-			kDebug(7123) << "openCamera succeeded at " << getpid();
+			qCDebug(LOG_KIO_KAMERA) << "openCamera succeeded at " << getpid();
 			cameraopen = true;
 		}
 	}
@@ -196,9 +199,9 @@
 	if (!m_camera)
 		return;
 
-	kDebug(7123) << "KameraProtocol::closeCamera at " << getpid();
+	qCDebug(LOG_KIO_KAMERA) << "KameraProtocol::closeCamera at " << getpid();
 	if ((gpr=gp_camera_exit(m_camera,m_context))!=GP_OK) {
-		kDebug(7123) << "closeCamera failed with " << gp_result_as_string(gpr);
+		qCDebug(LOG_KIO_KAMERA) << "closeCamera failed with " << gp_result_as_string(gpr);
 	}
 	// HACK: gp_camera_exit() in gp 2.0 does not close the port if there
 	//       is no camera_exit function.
@@ -222,9 +225,9 @@
 
 // The KIO slave "get" function (starts a download from the camera)
 // The actual returning of the data is done in the frontend callback functions.
-void KameraProtocol::get(const KUrl &url)
+void KameraProtocol::get(const QUrl &url)
 {
-	kDebug(7123) << "KameraProtocol::get(" << url.path() << ")";
+	qCDebug(LOG_KIO_KAMERA) << "KameraProtocol::get(" << url.path() << ")";
 	QString directory, file;
 	CameraFileType fileType;
 	int gpr;
@@ -278,14 +281,14 @@
 
 	// at last, a proper API to determine whether a thumbnail was requested.
 	if(cameraSupportsPreview() && metaData("thumbnail") == "1") {
-		kDebug(7123) << "get() retrieving the thumbnail";
+		qCDebug(LOG_KIO_KAMERA) << "get() retrieving the thumbnail";
 		fileType = GP_FILE_TYPE_PREVIEW;
 		if (info.preview.fields & GP_FILE_INFO_SIZE)
 			totalSize(info.preview.size);
 		if (info.preview.fields & GP_FILE_INFO_TYPE)
 			mimeType(info.preview.type);
 	} else {
-		kDebug(7123) << "get() retrieving the full-scale photo";
+		qCDebug(LOG_KIO_KAMERA) << "get() retrieving the full-scale photo";
 		fileType = GP_FILE_TYPE_NORMAL;
 		if (info.file.fields & GP_FILE_INFO_SIZE)
 			totalSize(info.file.size);
@@ -333,7 +336,7 @@
 	// buffer -- there's no expensive memcpy
 	gpr = gp_file_get_data_and_size(m_file, &fileData, &fileSize);
 	if (gpr != GP_OK) {
-		kDebug(7123) << "get():: get_data_and_size failed.";
+		qCDebug(LOG_KIO_KAMERA) << "get():: get_data_and_size failed.";
 		gp_file_free(m_file);
 		m_file = NULL;
 		error(KIO::ERR_UNKNOWN, QString::fromLocal8Bit(gp_result_as_string(gpr)));
@@ -371,14 +374,14 @@
 }
 
 // The KIO slave "stat" function.
-void KameraProtocol::stat(const KUrl &url)
+void KameraProtocol::stat(const QUrl &url)
 {
-	kDebug(7123) << "stat(\"" << url.path() << "\")";
+	qCDebug(LOG_KIO_KAMERA) << "stat(\"" << url.path() << "\")";
 
 	if (url.path().isEmpty()) {
-		KUrl rooturl(url);
+		QUrl rooturl(url);
 
-		kDebug(7123) << "redirecting to /";
+		qCDebug(LOG_KIO_KAMERA) << "redirecting to /";
 		rooturl.setPath("/");
 		redirection(rooturl);
 		finished();
@@ -433,13 +436,13 @@
 }
 
 // Implements a regular stat() of a file / directory, returning all we know about it
-void KameraProtocol::statRegular(const KUrl &xurl)
+void KameraProtocol::statRegular(const QUrl &xurl)
 {
 	KIO::UDSEntry entry;
 	QString	directory, file;
 	int gpr;
 
-	kDebug(7123) << "statRegular(\"" << xurl.path() << "\")";
+	qCDebug(LOG_KIO_KAMERA) << "statRegular(\"" << xurl.path() << "\")";
 
 	split_url2camerapath(xurl.path(), directory, file);
 
@@ -464,7 +467,7 @@
 	// Is "url" a directory?
 	CameraList *dirList;
 	gp_list_new(&dirList);
-	kDebug(7123) << "statRegular() Requesting directories list for " << directory;
+	qCDebug(LOG_KIO_KAMERA) << "statRegular() Requesting directories list for " << directory;
 
 	gpr = gp_camera_folder_list_folders(m_camera, tocstr(fix_foldername(directory)), dirList, m_context);
 	if (gpr != GP_OK) {
@@ -524,10 +527,10 @@
 }
 
 // The KIO slave "del" function.
-void KameraProtocol::del(const KUrl &url, bool isFile)
+void KameraProtocol::del(const QUrl &url, bool isFile)
 {
 	QString directory, file;
-	kDebug(7123) << "KameraProtocol::del(" << url.path() << ")";
+	qCDebug(LOG_KIO_KAMERA) << "KameraProtocol::del(" << url.path() << ")";
 
 	split_url2camerapath (url.path(), directory, file);
 	if(!openCamera()) {
@@ -554,10 +557,10 @@
 }
 
 // The KIO slave "listDir" function.
-void KameraProtocol::listDir(const KUrl &yurl)
+void KameraProtocol::listDir(const QUrl &yurl)
 {
 	QString directory, file;
-	kDebug(7123) << "KameraProtocol::listDir(" << yurl.path() << ")";
+	qCDebug(LOG_KIO_KAMERA) << "KameraProtocol::listDir(" << yurl.path() << ")";
 
 	split_url2camerapath(yurl.path(), directory, file);
 
@@ -569,10 +572,10 @@
 	}
 
 	if (yurl.path() == "/") {
-		KUrl xurl;
+		QUrl xurl;
 		// List the available cameras
 		QStringList groupList = m_config->groupList();
-		kDebug(7123) << "Found cameras: " << groupList.join(", ");
+		qCDebug(LOG_KIO_KAMERA) << "Found cameras: " << groupList.join(", ");
 		QStringList::Iterator it;
 		KIO::UDSEntry entry;
 
@@ -676,9 +679,9 @@
 	}
 
 	if (directory.isEmpty()) {
-		KUrl rooturl(yurl);
+		QUrl rooturl(yurl);
 
-		kDebug(7123) << "redirecting to /";
+		qCDebug(LOG_KIO_KAMERA) << "redirecting to /";
 		if (!current_camera.isEmpty() && !current_port.isEmpty())
 			rooturl.setPath("/"+current_camera+"@"+current_port+"/");
 		else
@@ -713,7 +716,7 @@
 
 	gpr = readCameraFolder(directory, dirList, fileList);
 	if(gpr != GP_OK) {
-		kDebug(7123) << "read Camera Folder failed:" << gp_result_as_string(gpr);
+		qCDebug(LOG_KIO_KAMERA) << "read Camera Folder failed:" << gp_result_as_string(gpr);
 		gp_list_free(dirList);
 		gp_list_free(fileList);
 		gp_list_free(specialList);
@@ -768,27 +771,27 @@
 
 void KameraProtocol::setCamera(const QString& camera, const QString& port)
 {
-	kDebug(7123) << "KameraProtocol::setCamera(" << camera << ", " << port << ")";
+	qCDebug(LOG_KIO_KAMERA) << "KameraProtocol::setCamera(" << camera << ", " << port << ")";
 	int gpr, idx;
 
 	if (!camera.isEmpty() && !port.isEmpty()) {
-		kDebug(7123) << "model is " << camera << ", port is " << port;
+		qCDebug(LOG_KIO_KAMERA) << "model is " << camera << ", port is " << port;
 
 		if (	m_camera &&
 			(current_camera == camera) &&
 			(current_port == port)
 		) {
-			kDebug(7123) << "Configuration is same, nothing to do.";
+			qCDebug(LOG_KIO_KAMERA) << "Configuration is same, nothing to do.";
 			return;
 		}
 		if (m_camera) {
-			kDebug(7123) << "Configuration change detected";
+			qCDebug(LOG_KIO_KAMERA) << "Configuration change detected";
 			closeCamera();
 			gp_camera_unref(m_camera);
 			m_camera = NULL;
 			infoMessage( i18n("Reinitializing camera") );
 		} else {
-			kDebug(7123) << "Initializing camera";
+			qCDebug(LOG_KIO_KAMERA) << "Initializing camera";
 			infoMessage( i18n("Initializing camera") );
 		}
 		// fetch abilities
@@ -798,7 +801,7 @@
 		idx = gp_abilities_list_lookup_model(abilities_list, tocstr(camera));
 		if (idx < 0) {
 			gp_abilities_list_free(abilities_list);
-			kDebug(7123) << "Unable to get abilities for model: " << camera;
+			qCDebug(LOG_KIO_KAMERA) << "Unable to get abilities for model: " << camera;
 			error(KIO::ERR_UNKNOWN, QString::fromLocal8Bit(gp_result_as_string(idx)));
 			return;
 		}
@@ -817,7 +820,7 @@
 			idx = gp_port_info_list_lookup_path(port_info_list, "usb:");
 		if (idx < 0) {
 			gp_port_info_list_free(port_info_list);
-			kDebug(7123) << "Unable to get port info for path: " << port;
+			qCDebug(LOG_KIO_KAMERA) << "Unable to get port info for path: " << port;
 			error(KIO::ERR_UNKNOWN, QString::fromLocal8Bit(gp_result_as_string(idx)));
 			return;
 		}
@@ -842,7 +845,7 @@
 		gp_camera_set_abilities(m_camera, m_abilities);
 		gp_camera_set_port_info(m_camera, port_info);
 		gp_camera_set_port_speed(m_camera, 0); // TODO: the value needs to be configurable
-		kDebug(7123) << "Opening camera model " << camera << " at " << port;
+		qCDebug(LOG_KIO_KAMERA) << "Opening camera model " << camera << " at " << port;
 
 		gp_port_info_list_free(port_info_list);
 
@@ -851,7 +854,7 @@
 			if (m_camera)
 				gp_camera_unref(m_camera);
 			m_camera = NULL;
-			kDebug(7123) << "Unable to init camera: " << errstr;
+			qCDebug(LOG_KIO_KAMERA) << "Unable to init camera: " << errstr;
 			error(KIO::ERR_SERVICE_NOT_AVAILABLE, errstr);
 			return;
 		}
@@ -943,7 +946,7 @@
 
 int KameraProtocol::readCameraFolder(const QString &folder, CameraList *dirList, CameraList *fileList)
 {
-	kDebug(7123) << "KameraProtocol::readCameraFolder(" << folder << ")";
+	qCDebug(LOG_KIO_KAMERA) << "KameraProtocol::readCameraFolder(" << folder << ")";
 
 	int gpr;
 	if((gpr = gp_camera_folder_list_folders(m_camera, tocstr(folder), dirList, m_context)) != GP_OK)
diff -Nur kamera-15.04.3/kioslave/kamera.h kamera-15.04.3-kf5/kioslave/kamera.h
--- kamera-15.04.3/kioslave/kamera.h	2015-01-21 03:53:30.000000000 +0000
+++ kamera-15.04.3-kf5/kioslave/kamera.h	2015-07-23 11:54:54.147471731 +0000
@@ -26,6 +26,14 @@
 #include <kio/slavebase.h>
 #include <gphoto2.h>
 
+#include <QUrl>
+#include <QLoggingCategory>
+
+using namespace KIO;
+
+Q_DECLARE_LOGGING_CATEGORY(LOG_KIO_KAMERA)
+
+
 class KConfig;
 
 class KameraProtocol : public KIO::SlaveBase
@@ -34,10 +42,10 @@
 	KameraProtocol(const QByteArray &pool, const QByteArray &app);
 	virtual ~KameraProtocol();
 
-	virtual void get(const KUrl &url);
-	virtual void stat(const KUrl &url);
-	virtual void del(const KUrl &url, bool isFile);
-	virtual void listDir(const KUrl &url);
+	virtual void get(const QUrl &url);
+	virtual void stat(const QUrl &url);
+	virtual void del(const QUrl &url, bool isFile);
+	virtual void listDir(const QUrl &url);
 	virtual void special(const QByteArray &data);
 
         CameraFile *getFile() { return m_file; }
@@ -63,7 +71,7 @@
 	void closeCamera(void);
 
 	void statRoot(void);
-	void statRegular(const KUrl &url);
+	void statRegular(const QUrl &url);
         void translateTextToUDS(KIO::UDSEntry &udsEntry, const QString &info, const char *txt);
         void translateFileToUDS(KIO::UDSEntry &udsEntry, const CameraFileInfo &info, QString name);
 	void translateDirectoryToUDS(KIO::UDSEntry &udsEntry, const QString &dirname);
diff -Nur kamera-15.04.3/solid_camera.desktop kamera-15.04.3-kf5/solid_camera.desktop
--- kamera-15.04.3/solid_camera.desktop	2015-01-21 03:53:30.000000000 +0000
+++ kamera-15.04.3-kf5/solid_camera.desktop	2015-07-23 12:08:58.172456616 +0000
@@ -4,7 +4,7 @@
 Actions=open;
 
 [Desktop Action open]
-Exec=kioclient exec camera:/
+Exec=kioclient5 exec camera:/
 Icon=system-file-manager
 Name=Open with File Manager
 Name[ar]=افتح بمدير الملفات
